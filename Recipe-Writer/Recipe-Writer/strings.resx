<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Error" xml:space="preserve">
    <value>Erreur</value>
  </data>
  <data name="ErrorEmptyFields" xml:space="preserve">
    <value>Please fill in all fields.</value>
  </data>
  <data name="ErrorIngredientAdd" xml:space="preserve">
    <value>Error while adding ingredient : {0}</value>
  </data>
  <data name="ErrorIngredientInsert" xml:space="preserve">
    <value>Error inserting an ingredient : {0}</value>
  </data>
  <data name="ErrorMaxIngredientsNbReached" xml:space="preserve">
    <value>Maximum number of ingredients for the recipe reached.</value>
  </data>
  <data name="ErrorMustEnterValidNumberForTimeCompletion" xml:space="preserve">
    <value>Please enter a valid number for the time of completion of the recipe</value>
  </data>
  <data name="ErrorNotANumber" xml:space="preserve">
    <value>Please enter a valid actual number for the quantity of the ingredient.</value>
  </data>
  <data name="NewIngredientInsertedIntoBase" xml:space="preserve">
    <value>New ingredient inserted into base.</value>
  </data>
  <data name="ErrorMustEnterACompletionTime" xml:space="preserve">
    <value>Please enter a completion time for the recipe.</value>
  </data>
  <data name="ErrorMustEnterATitle" xml:space="preserve">
    <value>Please enter a title for the recipe</value>
  </data>
  <data name="ConfirmDeleteIngredientFromDB" xml:space="preserve">
    <value>Remove this ingredient definitely ?</value>
  </data>
  <data name="ConfirmDeletion" xml:space="preserve">
    <value>Confirm deletion</value>
  </data>
  <data name="NbIngredientsStored" xml:space="preserve">
    <value>Number of ingredients stored : </value>
  </data>
  <data name="ErrorDatabaseCorrupted" xml:space="preserve">
    <value>The database is corrupted.</value>
  </data>
  <data name="BaseWillBeRebuilt" xml:space="preserve">
    <value>The base will be rebuilt.</value>
  </data>
  <data name="DBfileNotFound" xml:space="preserve">
    <value>Database file not found.</value>
  </data>
  <data name="DBWillBeBuiltWithInitialData" xml:space="preserve">
    <value>The database will be built with the initial data.</value>
  </data>
  <data name="ErrorMustEnterAtLeastOneIngredient" xml:space="preserve">
    <value>Please enter at least one ingredient.</value>
  </data>
  <data name="ConfirmDeleteInstruction" xml:space="preserve">
    <value>Really delete the instruction ?</value>
  </data>
  <data name="ErrorNoIngredientSelected" xml:space="preserve">
    <value>No ingredient was selected</value>
  </data>
  <data name="ConfirmDeleteDisplayedRecipeFromDB" xml:space="preserve">
    <value>Really delete the displayed recipe?</value>
  </data>
  <data name="Preparation" xml:space="preserve">
    <value>Preparation : </value>
  </data>
  <data name="NecessaryIngredients" xml:space="preserve">
    <value>Necessary ingredients</value>
  </data>
  <data name="InfoRecipeExported" xml:space="preserve">
    <value>The recipe has been successfully exported !</value>
  </data>
  <data name="ErrorExport" xml:space="preserve">
    <value>Error during export : {0}</value>
  </data>
  <data name="ToolTipRecipeReadyToCookStatusText" xml:space="preserve">
    <value>Indicates if you have enough ingredients to make the recipe.</value>
  </data>
  <data name="InfoAmountOfIngredientsNeededDeducted" xml:space="preserve">
    <value>The amount of ingredients needed to make this recipe has been deducted.</value>
  </data>
  <data name="DeductionFromInventory" xml:space="preserve">
    <value>Deduction from inventory</value>
  </data>
  <data name="ErrorMustUseOnlyLettersForTheFileName" xml:space="preserve">
    <value>Please use only letters from A to Z without accents, hyphens, underscores or numbers for the file name.</value>
  </data>
  <data name="ConfirmKeepOldImageFile" xml:space="preserve">
    <value>Keep the old image file ?</value>
  </data>
  <data name="ErrorMustEnterATitleForNewRecipe" xml:space="preserve">
    <value>Please enter a title for the new recipe.</value>
  </data>
  <data name="LicenceInfo1" xml:space="preserve">
    <value>This software uses a SQLite database for data management.</value>
  </data>
  <data name="LicenceInfo2" xml:space="preserve">
    <value>It was developed as part of a project to replace work at the end of an apprenticeship.</value>
  </data>
  <data name="LicenceInfo3" xml:space="preserve">
    <value>It is licensed to you under the GNU License.</value>
  </data>
  <data name="LicenceInfo4" xml:space="preserve">
    <value>Please contact me for any improvements or bug reports.</value>
  </data>
  <data name="LicenceVersion" xml:space="preserve">
    <value>Version 1.1 - April 2025</value>
  </data>
  <data name="LicenceAuthor" xml:space="preserve">
    <value>Created by Laurent Barraud</value>
  </data>
  <data name="SearchResults" xml:space="preserve">
    <value>Results :</value>
  </data>
</root>